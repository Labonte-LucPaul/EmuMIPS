/* This file was generated by SableCC ( http://sablecc.org ). */

package language_emuMips;

public abstract class Node {

  public abstract Type getType();

  public static enum Type {
    T_String,
    T_Number,
    T_Register,
    T_ConsoleString,
    T_Stmts_Many,
    T_Stmts_One,
    T_Stmt_Add,
    T_Stmt_Addi,
    T_Stmt_Addu,
    T_Stmt_Addiu,
    T_Stmt_Sub,
    T_Stmt_Subu,
    T_Stmt_And,
    T_Stmt_Andi,
    T_Stmt_Or,
    T_Stmt_Ori,
    T_Stmt_Nor,
    T_Stmt_Xor,
    T_Stmt_Xori,
    T_Stmt_Slt,
    T_Stmt_Slti,
    T_Stmt_Sltu,
    T_Stmt_Sltiu,
    T_Stmt_Sll,
    T_Stmt_Srl,
    T_Stmt_Beq,
    T_Stmt_Bne,
    T_Stmt_Lbu,
    T_Stmt_Lb,
    T_Stmt_Lhu,
    T_Stmt_Ll,
    T_Stmt_Lui,
    T_Stmt_Lh,
    T_Stmt_Lw,
    T_Stmt_Sb,
    T_Stmt_Sc,
    T_Stmt_Sh,
    T_Stmt_Sw,
    T_Stmt_Lbl,
    T_Stmt_Jmp,
    T_Stmt_Jmpreg,
    T_Stmt_Jmplnk,
    T_Stmt_Data,
    T_Stmt_Text,
    T_Stmt_Globl,
    T_Stmt_Syscall,
    T_Stmt_Mov,
    T_Stmt_La,
    T_Stmt_Li,
    T_RegExpr,
    T_ImmExpr,
    T_ImmExpru,
    T_Shift,
    T_Rs,
    T_Rt,
    T_Array,
    T_CommonDatas_Many,
    T_CommonDatas_One,
    T_Rd,
    T_CommonData_Word,
    T_CommonData_Half,
    T_CommonData_Byte,
    T_CommonData_Ascii,
    T_CommonData_Asciiz,
    T_CommonData_Float,
    T_CommonData_Double,
    T_CommonData_Space,
    T_CommonData_Align,
    T_CommonData_Lbl,
    T_DirectivesQte_Dirqt,
    TEnd,
    TAnonymous;
  }

  public abstract ProductionType getProductionType();

  public static enum ProductionType {
    T_$Start,
    T_Stmts,
    T_Stmt,
    T_RegExpr,
    T_ImmExpr,
    T_ImmExpru,
    T_Shift,
    T_Rs,
    T_Rt,
    T_Array,
    T_CommonDatas,
    T_Rd,
    T_CommonData,
    T_DirectivesQtes,
    T_DirectivesQte,
    TNotAProduction;
  }

  public abstract String getText();
  public abstract int getLine();
  public abstract int getPos();
  public abstract void apply(Walker walker);
  public abstract void applyOnChildren(Walker walker);

  private Node parent;

  public Node getParent() {
    return this.parent;
  }

  void setParent(Node parent) {
    this.parent = parent;
  }

  @Override
  public String toString() {
    return "\"" + getText() + "\"@(" + getLine() + "," + getPos() + ")";
  }

  abstract InternalType getInternalType();

  static enum InternalType {
    T_$0,
    T_$1,
    T_$2,
    T_$3,
    T_$4,
    T_$5,
    T_$6,
    T_$7,
    T_$8,
    T_$9,
    T_$10,
    T_$11,
    T_$12,
    T_$13,
    T_$14,
    T_$15,
    T_$16,
    T_$17,
    T_$18,
    T_$19,
    T_$20,
    T_String,
    T_$21,
    T_$22,
    T_$23,
    T_$24,
    T_$25,
    T_$26,
    T_Number,
    T_$27,
    T_$28,
    T_$29,
    T_$30,
    T_$31,
    T_$32,
    T_$33,
    T_$34,
    T_$35,
    T_$36,
    T_$37,
    T_$38,
    T_$39,
    T_$40,
    T_$41,
    T_Register,
    T_$42,
    T_$43,
    T_$44,
    T_$45,
    T_$46,
    T_$47,
    T_$48,
    T_$49,
    T_ConsoleString,
    T_$50,
    T_$51,
    T_$52,
    T_$53,
    T_$54,
    T_$55,
    T_$Start,
    T_Stmts_Many,
    T_Stmts_One,
    T_Stmt_Add,
    T_Stmt_Addi,
    T_Stmt_Addu,
    T_Stmt_Addiu,
    T_Stmt_Sub,
    T_Stmt_Subu,
    T_Stmt_And,
    T_Stmt_Andi,
    T_Stmt_Or,
    T_Stmt_Ori,
    T_Stmt_Nor,
    T_Stmt_Xor,
    T_Stmt_Xori,
    T_Stmt_Slt,
    T_Stmt_Slti,
    T_Stmt_Sltu,
    T_Stmt_Sltiu,
    T_Stmt_Sll,
    T_Stmt_Srl,
    T_Stmt_Beq,
    T_Stmt_Bne,
    T_Stmt_Lbu,
    T_Stmt_Lb,
    T_Stmt_Lhu,
    T_Stmt_Ll,
    T_Stmt_Lui,
    T_Stmt_Lh,
    T_Stmt_Lw,
    T_Stmt_Sb,
    T_Stmt_Sc,
    T_Stmt_Sh,
    T_Stmt_Sw,
    T_Stmt_Lbl,
    T_Stmt_Jmp,
    T_Stmt_Jmpreg,
    T_Stmt_Jmplnk,
    T_Stmt_Data,
    T_Stmt_Text,
    T_Stmt_Globl,
    T_Stmt_Syscall,
    T_Stmt_Mov,
    T_Stmt_La,
    T_Stmt_Li,
    T_RegExpr,
    T_ImmExpr,
    T_ImmExpru,
    T_Shift,
    T_Rs,
    T_Rt,
    T_Array,
    T_CommonDatas_Many,
    T_CommonDatas_One,
    T_Rd,
    T_CommonData_Word,
    T_CommonData_Half,
    T_CommonData_Byte,
    T_CommonData_Ascii,
    T_CommonData_Asciiz,
    T_CommonData_Float,
    T_CommonData_Double,
    T_CommonData_Space,
    T_CommonData_Align,
    T_CommonData_Lbl,
    T_DirectivesQtes_$1,
    T_DirectivesQtes_$2,
    T_DirectivesQte_Dirqt,
    TEnd;
  }
}
