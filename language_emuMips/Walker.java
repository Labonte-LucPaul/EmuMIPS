/* This file was generated by SableCC ( http://sablecc.org ). */

package language_emuMips;

public class Walker {

  public void inString(NString node) {
    defaultIn(node);
  }

  public void inRegister(NRegister node) {
    defaultIn(node);
  }

  public void inNumber(NNumber node) {
    defaultIn(node);
  }

  public void inNumberu(NNumberu node) {
    defaultIn(node);
  }

  public void inStmts_Many(NStmts_Many node) {
    defaultIn(node);
  }

  public void inStmts_One(NStmts_One node) {
    defaultIn(node);
  }

  public void inStmt_Add(NStmt_Add node) {
    defaultIn(node);
  }

  public void inStmt_Addi(NStmt_Addi node) {
    defaultIn(node);
  }

  public void inStmt_Addu(NStmt_Addu node) {
    defaultIn(node);
  }

  public void inStmt_Addiu(NStmt_Addiu node) {
    defaultIn(node);
  }

  public void inStmt_Sub(NStmt_Sub node) {
    defaultIn(node);
  }

  public void inStmt_Subu(NStmt_Subu node) {
    defaultIn(node);
  }

  public void inStmt_And(NStmt_And node) {
    defaultIn(node);
  }

  public void inStmt_Andi(NStmt_Andi node) {
    defaultIn(node);
  }

  public void inStmt_Or(NStmt_Or node) {
    defaultIn(node);
  }

  public void inStmt_Ori(NStmt_Ori node) {
    defaultIn(node);
  }

  public void inStmt_Nor(NStmt_Nor node) {
    defaultIn(node);
  }

  public void inStmt_Slt(NStmt_Slt node) {
    defaultIn(node);
  }

  public void inStmt_Slti(NStmt_Slti node) {
    defaultIn(node);
  }

  public void inStmt_Sltu(NStmt_Sltu node) {
    defaultIn(node);
  }

  public void inStmt_Sltiu(NStmt_Sltiu node) {
    defaultIn(node);
  }

  public void inStmt_Sll(NStmt_Sll node) {
    defaultIn(node);
  }

  public void inStmt_Srl(NStmt_Srl node) {
    defaultIn(node);
  }

  public void inStmt_Lbl(NStmt_Lbl node) {
    defaultIn(node);
  }

  public void inRegExpr(NRegExpr node) {
    defaultIn(node);
  }

  public void inImmExpr(NImmExpr node) {
    defaultIn(node);
  }

  public void inShift(NShift node) {
    defaultIn(node);
  }

  public void inRs(NRs node) {
    defaultIn(node);
  }

  public void inRt(NRt node) {
    defaultIn(node);
  }

  public void inRd(NRd node) {
    defaultIn(node);
  }

  public void inImmediate_Signed(NImmediate_Signed node) {
    defaultIn(node);
  }

  public void inImmediate_Unsigned(NImmediate_Unsigned node) {
    defaultIn(node);
  }

  public void inJmpExpr_Lbl(NJmpExpr_Lbl node) {
    defaultIn(node);
  }

  public void inAddress(NAddress node) {
    defaultIn(node);
  }

  public void defaultIn(Node node) {
  }

  public void caseString(NString node) {
    defaultCase(node);
  }

  public void caseRegister(NRegister node) {
    defaultCase(node);
  }

  public void caseNumber(NNumber node) {
    defaultCase(node);
  }

  public void caseNumberu(NNumberu node) {
    defaultCase(node);
  }

  public void caseStmts_Many(NStmts_Many node) {
    defaultCase(node);
  }

  public void caseStmts_One(NStmts_One node) {
    defaultCase(node);
  }

  public void caseStmt_Add(NStmt_Add node) {
    defaultCase(node);
  }

  public void caseStmt_Addi(NStmt_Addi node) {
    defaultCase(node);
  }

  public void caseStmt_Addu(NStmt_Addu node) {
    defaultCase(node);
  }

  public void caseStmt_Addiu(NStmt_Addiu node) {
    defaultCase(node);
  }

  public void caseStmt_Sub(NStmt_Sub node) {
    defaultCase(node);
  }

  public void caseStmt_Subu(NStmt_Subu node) {
    defaultCase(node);
  }

  public void caseStmt_And(NStmt_And node) {
    defaultCase(node);
  }

  public void caseStmt_Andi(NStmt_Andi node) {
    defaultCase(node);
  }

  public void caseStmt_Or(NStmt_Or node) {
    defaultCase(node);
  }

  public void caseStmt_Ori(NStmt_Ori node) {
    defaultCase(node);
  }

  public void caseStmt_Nor(NStmt_Nor node) {
    defaultCase(node);
  }

  public void caseStmt_Slt(NStmt_Slt node) {
    defaultCase(node);
  }

  public void caseStmt_Slti(NStmt_Slti node) {
    defaultCase(node);
  }

  public void caseStmt_Sltu(NStmt_Sltu node) {
    defaultCase(node);
  }

  public void caseStmt_Sltiu(NStmt_Sltiu node) {
    defaultCase(node);
  }

  public void caseStmt_Sll(NStmt_Sll node) {
    defaultCase(node);
  }

  public void caseStmt_Srl(NStmt_Srl node) {
    defaultCase(node);
  }

  public void caseStmt_Lbl(NStmt_Lbl node) {
    defaultCase(node);
  }

  public void caseRegExpr(NRegExpr node) {
    defaultCase(node);
  }

  public void caseImmExpr(NImmExpr node) {
    defaultCase(node);
  }

  public void caseShift(NShift node) {
    defaultCase(node);
  }

  public void caseRs(NRs node) {
    defaultCase(node);
  }

  public void caseRt(NRt node) {
    defaultCase(node);
  }

  public void caseRd(NRd node) {
    defaultCase(node);
  }

  public void caseImmediate_Signed(NImmediate_Signed node) {
    defaultCase(node);
  }

  public void caseImmediate_Unsigned(NImmediate_Unsigned node) {
    defaultCase(node);
  }

  public void caseJmpExpr_Lbl(NJmpExpr_Lbl node) {
    defaultCase(node);
  }

  public void caseAddress(NAddress node) {
    defaultCase(node);
  }

  public void defaultCase(Node node) {
    node.applyOnChildren(this);
  }

  public void outString(NString node) {
    defaultOut(node);
  }

  public void outRegister(NRegister node) {
    defaultOut(node);
  }

  public void outNumber(NNumber node) {
    defaultOut(node);
  }

  public void outNumberu(NNumberu node) {
    defaultOut(node);
  }

  public void outStmts_Many(NStmts_Many node) {
    defaultOut(node);
  }

  public void outStmts_One(NStmts_One node) {
    defaultOut(node);
  }

  public void outStmt_Add(NStmt_Add node) {
    defaultOut(node);
  }

  public void outStmt_Addi(NStmt_Addi node) {
    defaultOut(node);
  }

  public void outStmt_Addu(NStmt_Addu node) {
    defaultOut(node);
  }

  public void outStmt_Addiu(NStmt_Addiu node) {
    defaultOut(node);
  }

  public void outStmt_Sub(NStmt_Sub node) {
    defaultOut(node);
  }

  public void outStmt_Subu(NStmt_Subu node) {
    defaultOut(node);
  }

  public void outStmt_And(NStmt_And node) {
    defaultOut(node);
  }

  public void outStmt_Andi(NStmt_Andi node) {
    defaultOut(node);
  }

  public void outStmt_Or(NStmt_Or node) {
    defaultOut(node);
  }

  public void outStmt_Ori(NStmt_Ori node) {
    defaultOut(node);
  }

  public void outStmt_Nor(NStmt_Nor node) {
    defaultOut(node);
  }

  public void outStmt_Slt(NStmt_Slt node) {
    defaultOut(node);
  }

  public void outStmt_Slti(NStmt_Slti node) {
    defaultOut(node);
  }

  public void outStmt_Sltu(NStmt_Sltu node) {
    defaultOut(node);
  }

  public void outStmt_Sltiu(NStmt_Sltiu node) {
    defaultOut(node);
  }

  public void outStmt_Sll(NStmt_Sll node) {
    defaultOut(node);
  }

  public void outStmt_Srl(NStmt_Srl node) {
    defaultOut(node);
  }

  public void outStmt_Lbl(NStmt_Lbl node) {
    defaultOut(node);
  }

  public void outRegExpr(NRegExpr node) {
    defaultOut(node);
  }

  public void outImmExpr(NImmExpr node) {
    defaultOut(node);
  }

  public void outShift(NShift node) {
    defaultOut(node);
  }

  public void outRs(NRs node) {
    defaultOut(node);
  }

  public void outRt(NRt node) {
    defaultOut(node);
  }

  public void outRd(NRd node) {
    defaultOut(node);
  }

  public void outImmediate_Signed(NImmediate_Signed node) {
    defaultOut(node);
  }

  public void outImmediate_Unsigned(NImmediate_Unsigned node) {
    defaultOut(node);
  }

  public void outJmpExpr_Lbl(NJmpExpr_Lbl node) {
    defaultOut(node);
  }

  public void outAddress(NAddress node) {
    defaultOut(node);
  }

  public void defaultOut(Node node) {
  }
}
